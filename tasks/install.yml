---


- name: Install/Upgrade block
  block:

    - name: Create a temporary directory for download
      ansible.windows.win_tempfile:
        state: directory
      register: vmware_tools_dl_temp

    - name: Download ISO from VMware Tools site
      ansible.windows.win_get_url:
        checksum_algorithm: sha256
        checksum: "{{ ansible_role_vmware_tools_sha256sums[available_vmware_tools_version|join('-')] }}"
        url: 'https://packages.vmware.com/tools/releases/{{ ansible_role_vmware_tools_version }}/windows/{{ vmware_tools_iso_filename | first }}'
        validate_certs: True
        dest: '{{ vmware_tools_dl_temp.path }}'
      retries: 10
      delay: 10

    - name: Mount VMware Tools ISO file.
      community.windows.win_disk_image:
        image_path: '{{ vmware_tools_dl_temp.path }}\{{ vmware_tools_iso_filename | first }}'
        state: present
      register: vmware_tools_iso_mount

    - name: Extract installer files to tempdir
      ansible.windows.win_command: "{{ 'setup64.exe' if ansible_architecture2 == 'x86_64' else 'setup.exe' }} /A {{ vmware_tools_dl_temp.path }}"
      args:
        chdir: '{{ vmware_tools_iso_mount.mount_paths[0] }}'

    - name: Find MSI installer in tempdir
      ansible.windows.win_find:
        paths: '{{ vmware_tools_dl_temp.path }}'
        patterns: '*.msi'
      register: vm_tools_msi_installer_search

    - name: Set fact for installed VMware Tools version and build.
      ansible.builtin.set_fact:
        ansible_role_vmware_tools_productid: "{{ vm_tools_msi_installer_search.files[0].filename|regex_search('{([A-Z0-9-]+)}.msi', '\\1') | first }}"

    - name: Install VMware Tools
      become: true
      ansible.windows.win_package:
        path: "{{ vmware_tools_iso_mount.mount_paths[0] }}\\{{ 'setup64.exe' if ansible_architecture2 == 'x86_64' else 'setup.exe' }}"
        product_id: '{{ ansible_role_vmware_tools_productid }}'
        arguments: ' /S /v "/qn REBOOT=R ADDLOCAL=ALL REMOVE={{ ansible_role_vmware_tools_remove_features | join(", ")}}"'
        state: present
        expected_return_code: [0, 1641, 3010]
      async: 120
      poll: 5
      register: ansible_role_vmware_tools_install
  
    - name: Reboot after VMware Tools install if needed
      become: true
      ansible.windows.win_reboot:
        reboot_timeout: 600
      no_log: false
      when: ansible_role_vmware_tools_install.reboot_required | bool

    - name: Wait for vmtoolsd processes
      community.windows.win_wait_for_process:
        process_name_exact: vmtoolsd
        process_min_count: 1
        state: present
        sleep: 10
        timeout: 300
      no_log: true
  
    - name: Unmount VMware Tools ISO file.
      community.windows.win_disk_image:
        image_path: '{{ vmware_tools_dl_temp.path }}\{{ vmware_tools_iso_filename | first }}'
        state: absent

    - name: Delete VMware Tools installer
      ansible.windows.win_file:
        path: '{{ vmware_tools_dl_temp.path }}'
        state: absent

  when: installed_vmware_tools_version is not defined or installed_vmware_tools_version is defined and installed_vmware_tools_version[0] is version(ansible_role_vmware_tools_version, '<')
